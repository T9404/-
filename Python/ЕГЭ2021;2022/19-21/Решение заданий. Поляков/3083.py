'''
Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может
а) добавить в кучу один камень;
б) увеличить количество камней в куче в два раза;
в) увеличить количество камней в куче в три раза.
Игра завершается в тот момент, когда количество камней в куче становится не менее 36. Если при этом в куче оказалось не более 60 камней, то победителем считается игрок, сделавший последний ход. В противном случае победителем становится его противник. В начальный момент в куче было S камней, 1 ≤ S ≤ 35.
Ответьте на следующие вопросы:
  Вопрос 1. Найдите минимальное значение S, при котором Ваня выигрывает своим первым ходом при любой игре Пети.
  Вопрос 2. Сколько существует значений S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:
− Петя не может выиграть за один ход;
− Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
  Вопрос 3. Найдите минимальное и максимальное значения S, при которых одновременно выполняются два условия:
– у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
– у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.
Найденные значения запишите в ответе в порядке возрастания.
'''
# https://prnt.sc/TAw9rDn9SHgK


from functools import lru_cache


def move(h):
    return h + 1, h * 2, h * 3


@lru_cache(None)
def F(h):
    if h >= 36:
        if h <= 60:
            return 'W'
        else:
            return 'P1'

    if any(F(m) == 'W' for m in move(h)):
        return 'P1'
    if all(F(m) == 'P1' for m in move(h)):
        return 'V1'
    if any(F(m) == 'V1' for m in move(h)):
        return 'P2'
    if all(F(m) in ['P1', 'P2'] for m in move(h)):
        return 'V2'


answer_19 = [x for x in range(1, 36) if F(x) == 'V1']
print(min(answer_19))

answer_20 = [x for x in range(1, 36) if F(x) == 'P2']
print(len(answer_20))

answer_21 = [x for x in range(1, 36) if F(x) == 'V2']
print(min(answer_21), max(answer_21))


'''   
В чем суть? Если мы вышли за 80, то победитель противник. Т.Е. кто еще был в игре
Как это отработать? Дело в том, что все наши ходы как бы смещаются, в этом случае на -1,
А это значит, что выигрывает ПРеДшественник. Но почему 'P1'? Все дело в том, что
мы делаем рекурсию и заканчиваем не на 'WIN', а на 'P1' (предшест) ...V1->P1->WIN, в нашем
случае: ...V1->P1  
'''
