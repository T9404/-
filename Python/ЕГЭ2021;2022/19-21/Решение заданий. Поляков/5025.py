'''
Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. 
Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может увеличить 
количество камней в куче в два раза или добавить в кучу два камня. Так же за всю игру 
можно только один раз сделать суперход - ход, после которого количество камней 
в куче не изменится, а очередь хода перейдёт к сопернику. То есть суперход может сделать 
один раз либо Ваня, либо Петя. Для того чтобы делать ходы, у каждого игрока есть 
неограниченное количество камней. Выигрывает тот игрок, после хода которого количество 
камней в куче становится не менее 20.

В начальный момент в куче было S камней; 1 ≤ S ≤ 19. Будем говорить, что игрок имеет 
выигрышную стратегию, если он может выиграть при любых ходах противника.

Задание 19
Известно, что Ваня выиграл своим первым ходом после неудачного первого хода Пети. 
Назовите минимальное значение S, при котором это возможно.

Задание 20.
Найдите два наибольших значения S, при которых у Пети есть выигрышная стратегия, 
причём Петя не может выиграть первым ходом, но может выиграть своим вторым ходом 
независимо от того, как будет ходить Ваня. Найденные значения запишите в ответе в 
порядке возрастания через пробел.

Задание 21.
Найдите все значения S, при которых у Вани есть выигрышная стратегия. Найденные значения 
запишите в ответе в порядке возрастания через пробел.
'''
# https://prnt.sc/VhqDlrIotBNd


def move(e):
    heap, best = e
    stones = []

    if best == 0:
        stones.append((heap, 1))

    stones.append((heap + 2, best))
    stones.append((heap * 2, best))

    return stones


def f(h):
    a, b = h

    if a >= 20:
        return 'WIN'

    elif any(f(m) == 'WIN' for m in move(h)):
        return 'P1'

    elif all(f(m) == 'P1' for m in move(h)):
        return 'V1'

    elif any(f(m) == 'V1' for m in move(h)):
        return 'P2'

    elif all(f(m) in ['P1', 'P2'] for m in move(h)):
        return 'V2'

    elif any(f(m) == 'V2' for m in move(h)):
        return 'P3'

    elif all(f(m) in ['P1', 'P2', 'P3'] for m in move(h)):
        return 'V3'


def find_19_ans(h):
    a, b = h

    if a >= 20:
        return 'WIN'

    elif any(f(m) == 'WIN' for m in move(h)):
        return 'P1'

    elif any(f(m) == 'P1' for m in move(h)):
        return 'V1'


ans_19 = min(i for i in range(1, 19 + 1) if find_19_ans((i, 0)) == 'V1')
print(ans_19)

ans_20 = sorted(i for i in range(1, 19 + 1) if f((i, 0)) == 'P2')[-2:]
print(*ans_20)

ans_21 = sorted(i for i in range(1, 19 + 1) if f((i, 0))[0] == 'V')
print(min(ans_21), max(ans_21))
